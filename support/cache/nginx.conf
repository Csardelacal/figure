# See: https://www.nginx.com/blog/nginx-caching-guide/

# These are just some really basic directives so that nginx runs with it's own
# user and scales as needed depending on the load it receives.
user  nginx;
worker_processes  auto;
pid /var/run/nginx.pid;

# Add the settings for the cache here, this will determine where on the server
# the cache sits and how big it can become.
proxy_cache_path /path/to/cache levels=1:2 keys_zone=my_cache:10m max_size=10g 
	inactive=60m use_temp_path=off;

# Determine if and where the error log should be written to.
error_log  /var/log/nginx/error.log error;

events {
    worker_connections  4096;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;

    upstream figure {
        server figure:443;
    }

    server {
		# The example server is configured with HTTP without encryption. In a production
		# environment you should make sure to deploy this with HTTPS enabled and have HTTP
		# requests redirected
        listen       80;
        listen  [::]:80;
        server_name  localhost;

        # To allow special characters in headers
        ignore_invalid_headers off;
		
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
		
		# Serve the cache from the root location. If you wish to "clamp" the server to a specific
		# subdirectory or add some caching, you can add it here and in the proxy_pass directive,
		# thath should prevent the cache from serving any resources it shouldn't
        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
			
			proxy_cache my_cache;
			proxy_cache_use_stale error timeout updating http_500 http_502
									http_503 http_504;
			proxy_cache_background_update on;
			proxy_cache_lock on;

            proxy_connect_timeout 300;
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass https://figure;
        }
    }
}
